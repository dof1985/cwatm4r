#   KGE(s = tmp$sim_val, o = tmp$obs_val)
# })), unique(df$sid))
#
# ggplot(df2[!df2$key %in% "difference", ], aes(x = week, y =  val, color = key)) + geom_line(aes(group = key)) +
#   facet_wrap(ds~sid, scales = "free_y", ncol = 1) +
#   theme_light()
# # df$monYear <- format(as.Date(df$time, origin = "1901-01-01"), format = "%b-%Y")
# # kge <- setNames(unlist(lapply(unique(df2$sid), function(id) {
# #   tmp <- tidyr::spread(df2[df2$sid %in% id, ], key, val)
# #   KGE(sim = tmp$sim_val, obs = tmp$obs_val)
# # })), unique(df$sid))
# #
# #
# # df2 <- as.data.frame(dplyr::summarise(dplyr::group_by(df, monYear, sid, key), "val" = mean(val, na.rm = TRUE)))
# # ggplot(df2, aes(x = monYear, y =  val, color = key)) + geom_line(aes(group = key)) + facet_grid(sid~., scales = "free_y")
# #
# #
# # #dm <- mean(stack(cwatm4r::ncdf2raster(sprintf("%s/discharge_daily.nc", pth), flip = NULL, transpose = TRUE)))
# #writeRaster(dm, "discharge_Sorekmean.tif", overwrite = TRUE)
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
#KGE(s = tmp$sim_val, o = tmp$obs_val)
hydroGOF::KGE(sim = tmp$sim_val, obs = tmp$obs_val, method = "2009")
})), unique(df$sid))
install.packages("hydroGOF")
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
#KGE(s = tmp$sim_val, o = tmp$obs_val)
hydroGOF::KGE(sim = tmp$sim_val, obs = tmp$obs_val, method = "2009")
})), unique(df$sid))
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
KGE(s = tmp$sim_val, o = tmp$obs_val)
#hydroGOF::KGE(sim = tmp$sim_val, obs = tmp$obs_val, method = "2009")
})), unique(df$sid))
# Compare discharge
rm(list = ls())
gc()
require(plotly)
require(ggplot2)
require(raster)
#library(hydroGOF)
devtools::document("c:/users/fridman/documents/GitHub/cwatm4r")
devtools::load_all("c:/users/fridman/documents/GitHub/cwatm4r")
# check overflow form all wwt - e.g. Bet Shemesh; also check base flow and capillar location; also check with reduced aquifer size
KGE <- function(o,s) {
nans <- is.na(o)
o <- o[!nans]
s <- s[!nans]
B <- mean(s, na.rm = TRUE) / mean(o, na.rm = TRUE)
y <- (sd(s, na.rm = TRUE) / mean(s, na.rm = TRUE)) / (sd(o, na.rm = TRUE) / mean(o, na.rm = TRUE))
r <- cor(s, o, method = "pearson")
kge <- 1 -((r - 1) ^ 2 + (B - 1) ^ 2 + (y - 1) ^ 2)
return(kge)
}
NSE <- function(o,s, normalize = TRUE) {
nse <- 1 - sum((o - s) ^ 2, na.rm = TRUE) / sum((o - mean(o, na.rm = TRUE)) ^ 2, na.rm = TRUE)
if(normalize) {
nse <- 1 / (2 - nse)
}
return(nse)
}
#pth <-  "c:/Users/dof19/Dropbox/IIASA/cwatm_Israel/outputs/ayalonModflow_151221"
#pth <-  "c:/Users/dof19/Dropbox/IIASA/cwatm_Israel/outputs/SorekAyalonWadit/"
#pth <- "c:/Users/dof19/Dropbox/IIASA/cwatm_Israel/outputs/soreq_131221/"
#pth <- "c:/Users/dof19/Dropbox/IIASA/cwatm_Israel/outputs/modflow_checkStorage/"
pth <- "c:/Users/fridman/Dropbox/IIASA/cwatm_Israel/outputs/newModel_test/"
obs <- openxlsx::read.xlsx("c:/Users/fridman/Dropbox/IIASA/cwatm-dataCollection/Israel_1km/CWATM_data/cwatm_input30sec/calibration_data/daily_discharge_metaIncluded.xlsx",
sheet = 1, startRow = 2)
obsloc <- data.frame("x" = c(34.996, 34.754, 34.78, 34.845, 34.795, 34.862, #18115: 34.996
34.904, 34.917, 34.905),
"y" = c(31.755, 31.87, 31.837, 31.812, 32.037, 32.003, #18115: 31.755
31.962, 31.895, 31.987),
"sid" = c(18115, 18150, 18146, 18131, 17168, 17164,
17144, 17143, 17155))
#obsloc <- obsloc[obsloc$sid %in% c(18131, 18150, 18115), ] # sorek
obsloc <- obsloc[obsloc$sid %in% c(17168, 17164, 17144), ] # ayalon #
#obsloc <- obsloc[obsloc$sid %in% c(17168, 17164, 17144, 17155, 18131, 18150, 18115), ] # ayalonsorek
#period <- (c("2003-06-01", "2006-05-31"))
period <- NULL
# 18146 - can't get the discharge from the model due to spatial resolution.
# 18115 - may be off due to missed river pumping
x <- cwatm4r::ncdf2raster(pth = sprintf("%s/discharge_daily.nc", pth), transpose = TRUE,
spatial = obsloc, time = period, origin = "1901-01-01")
x$sid <- rep(obsloc$sid, nrow(x) /nrow(obsloc))
obs1 <- obs[obs$StationId %in% obsloc$sid, ]
x$date <- as.Date(as.numeric(x$time), origin = "1901-01-01")
obs1$time <- as.numeric(as.Date(paste0(obs1$Year, "-",obs1$Mon, "-", obs1$Day), "%Y-%m-%d") - as.Date("1901-01-01"))
obs1$pk <- paste(obs1$StationId, obs1$time, sep = "_")
x$pk <- paste(x$sid, x$time, sep = "_")
names(x)[5] <- "sim_val"
names(obs1)[5] <- "obs_val"
df <- merge(x, obs1[c(1, 5, 11)], all.x = TRUE, sort = FALSE, by = "pk")
df$difference <- df$sim_val - df$obs_val
df <- tidyr::gather(df, key, absolute, sim_val, obs_val)
df <- tidyr::gather(df, ds, val, absolute, difference)
df[df$ds %in% "difference", "key"] <- "difference"
## df wet season - 11 - 4 ###
#df[!format(as.Date(df$time, "1901-01-01"), format = "%m") %in% c("10", "11", "12", "01", "02", "03", "04"), "val"] <- NA
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
KGE(s = tmp$sim_val, o = tmp$obs_val)
#hydroGOF::KGE(sim = tmp$sim_val, obs = tmp$obs_val, method = "2009")
})), unique(df$sid))
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
round(NSE(s = tmp$sim_val, o = tmp$obs_val), 3)
#hydroGOF::KGE(sim = tmp$sim_val, obs = tmp$obs_val, method = "2009")
})), unique(df$sid))
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
summary(lm(sim_val~obs_val, data = tmp))$r.squared
})), unique(df$sid))
dplyr::summarise(dplyr::group_by(df[df$ds %in% "absolute", ], sid, ds, key),
"mean" = mean(val, na.rm = TRUE),
"median" = median(val, na.rm = TRUE),
"q75" = quantile(val, prob = 0.75, na.rm = TRUE))
# ggplot(df, aes(x = date, y =  val, color = key), alpha = 0.75) + geom_line(aes(group = key)) +
#   facet_wrap(ds~sid, scales = "free_y", nco
# CHECK CONVERSION FOR POINTS NOT THE RIGHT POINTS
ids <- obsloc$sid
figs <- lapply(ids, function(id) {
df_ <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", c("date", "key", "val")], key, val)
fig <- plot_ly(df_,
type = 'scatter', mode = 'lines',
x = ~date, y = ~sim_val, name = "Simulated")
fig <- add_trace(fig, x = ~date, y = df_$obs_val, type = 'scatter', mode = 'markers', name = "Observed")
fig <- layout(fig, yaxis = list(title = TeX("Avg.~Daily~Discharge~(m^{3}~sec^{-1})")),
xaxis = list(title = "Date"))
config(fig, mathjax = 'cdn')
})
multifig <- do.call("subplot", c(figs, list(nrows = length(figs))))
multifig <- layout(multifig,
annotations = lapply(seq_along(figs), function(i) {
list(x = 0.5,
y = 1 - (i - 1) * 1 / length(figs) - 0.03,
text =  sprintf("Station id: %s", ids[i]),
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE )
}))
multifig
# #fig
#
# ggplot(tidyr::spread(df[!df$ds %in% "difference", ], key, val), aes(x = date)) +
#   geom_line(aes(y = sim_val)) + geom_point(aes(y = obs_val), color = "red") +
#   facet_wrap(ds~sid, scales = "free_y", nrow = length(unique(df$sid)))# + ylim(0, 1)
#
# df$year <- format(df$date, "%Y")
# ggplot(tidyr::spread(df[!df$ds %in% "difference", ], key, val), aes(x = obs_val, y =  sim_val,
#                                                                     color = as.factor(year))) + geom_point(alpha = 0.25) +
#   geom_abline(intercept = 0, slope = 1) +
#   facet_grid(sid~year, scales = "free_y") +
#   theme_light() + xlim(NA, 50) + ylim(NA, 50)
#
#
# ## weekely
#
# df$week <- format(df$date, "%W-%Y")
# df2 <- as.data.frame(summarise(group_by(df, week, sid, ds, key),
#                               "val" = mean(val, na.rm = TRUE)))
#
# setNames(unlist(lapply(unique(df2$sid), function(id) {
#   tmp <- tidyr::spread(df2[df2$sid %in% id & df2$ds %in% "absolute", ], key, val)
#   KGE(s = tmp$sim_val, o = tmp$obs_val)
# })), unique(df$sid))
#
# ggplot(df2[!df2$key %in% "difference", ], aes(x = week, y =  val, color = key)) + geom_line(aes(group = key)) +
#   facet_wrap(ds~sid, scales = "free_y", ncol = 1) +
#   theme_light()
# # df$monYear <- format(as.Date(df$time, origin = "1901-01-01"), format = "%b-%Y")
# # kge <- setNames(unlist(lapply(unique(df2$sid), function(id) {
# #   tmp <- tidyr::spread(df2[df2$sid %in% id, ], key, val)
# #   KGE(sim = tmp$sim_val, obs = tmp$obs_val)
# # })), unique(df$sid))
# #
# #
# # df2 <- as.data.frame(dplyr::summarise(dplyr::group_by(df, monYear, sid, key), "val" = mean(val, na.rm = TRUE)))
# # ggplot(df2, aes(x = monYear, y =  val, color = key)) + geom_line(aes(group = key)) + facet_grid(sid~., scales = "free_y")
# #
# #
# # #dm <- mean(stack(cwatm4r::ncdf2raster(sprintf("%s/discharge_daily.nc", pth), flip = NULL, transpose = TRUE)))
# #writeRaster(dm, "discharge_Sorekmean.tif", overwrite = TRUE)
# Compare discharge
rm(list = ls())
gc()
require(plotly)
require(ggplot2)
require(raster)
#library(hydroGOF)
devtools::document("c:/users/fridman/documents/GitHub/cwatm4r")
devtools::load_all("c:/users/fridman/documents/GitHub/cwatm4r")
# check overflow form all wwt - e.g. Bet Shemesh; also check base flow and capillar location; also check with reduced aquifer size
KGE <- function(o,s) {
nans <- is.na(o)
o <- o[!nans]
s <- s[!nans]
B <- mean(s, na.rm = TRUE) / mean(o, na.rm = TRUE)
y <- (sd(s, na.rm = TRUE) / mean(s, na.rm = TRUE)) / (sd(o, na.rm = TRUE) / mean(o, na.rm = TRUE))
r <- cor(s, o, method = "pearson")
kge <- 1 -((r - 1) ^ 2 + (B - 1) ^ 2 + (y - 1) ^ 2)
return(kge)
}
NSE <- function(o,s, normalize = TRUE) {
nse <- 1 - sum((o - s) ^ 2, na.rm = TRUE) / sum((o - mean(o, na.rm = TRUE)) ^ 2, na.rm = TRUE)
if(normalize) {
nse <- 1 / (2 - nse)
}
return(nse)
}
#pth <-  "c:/Users/dof19/Dropbox/IIASA/cwatm_Israel/outputs/ayalonModflow_151221"
#pth <-  "c:/Users/dof19/Dropbox/IIASA/cwatm_Israel/outputs/SorekAyalonWadit/"
#pth <- "c:/Users/dof19/Dropbox/IIASA/cwatm_Israel/outputs/soreq_131221/"
#pth <- "c:/Users/dof19/Dropbox/IIASA/cwatm_Israel/outputs/modflow_checkStorage/"
pth <- "c:/Users/fridman/Dropbox/IIASA/cwatm_Israel/outputs/newModel_test/"
obs <- openxlsx::read.xlsx("c:/Users/fridman/Dropbox/IIASA/cwatm-dataCollection/Israel_1km/CWATM_data/cwatm_input30sec/calibration_data/daily_discharge_metaIncluded.xlsx",
sheet = 1, startRow = 2)
obsloc <- data.frame("x" = c(34.996, 34.754, 34.78, 34.845, 34.795, 34.862, #18115: 34.996
34.904, 34.917, 34.905),
"y" = c(31.755, 31.87, 31.837, 31.812, 32.037, 32.003, #18115: 31.755
31.962, 31.895, 31.987),
"sid" = c(18115, 18150, 18146, 18131, 17168, 17164,
17144, 17143, 17155))
#obsloc <- obsloc[obsloc$sid %in% c(18131, 18150, 18115), ] # sorek
obsloc <- obsloc[obsloc$sid %in% c(17168, 17164, 17144), ] # ayalon #
#obsloc <- obsloc[obsloc$sid %in% c(17168, 17164, 17144, 17155, 18131, 18150, 18115), ] # ayalonsorek
#period <- (c("2003-06-01", "2006-05-31"))
period <- NULL
# 18146 - can't get the discharge from the model due to spatial resolution.
# 18115 - may be off due to missed river pumping
x <- cwatm4r::ncdf2raster(pth = sprintf("%s/discharge_daily.nc", pth), transpose = TRUE,
spatial = obsloc, time = period, origin = "1901-01-01")
x$sid <- rep(obsloc$sid, nrow(x) /nrow(obsloc))
obs1 <- obs[obs$StationId %in% obsloc$sid, ]
x$date <- as.Date(as.numeric(x$time), origin = "1901-01-01")
obs1$time <- as.numeric(as.Date(paste0(obs1$Year, "-",obs1$Mon, "-", obs1$Day), "%Y-%m-%d") - as.Date("1901-01-01"))
obs1$pk <- paste(obs1$StationId, obs1$time, sep = "_")
x$pk <- paste(x$sid, x$time, sep = "_")
names(x)[5] <- "sim_val"
names(obs1)[5] <- "obs_val"
df <- merge(x, obs1[c(1, 5, 11)], all.x = TRUE, sort = FALSE, by = "pk")
df$difference <- df$sim_val - df$obs_val
df <- tidyr::gather(df, key, absolute, sim_val, obs_val)
df <- tidyr::gather(df, ds, val, absolute, difference)
df[df$ds %in% "difference", "key"] <- "difference"
## df wet season - 11 - 4 ###
#df[!format(as.Date(df$time, "1901-01-01"), format = "%m") %in% c("10", "11", "12", "01", "02", "03", "04"), "val"] <- NA
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
KGE(s = tmp$sim_val, o = tmp$obs_val)
#hydroGOF::KGE(sim = tmp$sim_val, obs = tmp$obs_val, method = "2009")
})), unique(df$sid))
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
round(NSE(s = tmp$sim_val, o = tmp$obs_val), 3)
#hydroGOF::KGE(sim = tmp$sim_val, obs = tmp$obs_val, method = "2009")
})), unique(df$sid))
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
summary(lm(sim_val~obs_val, data = tmp))$r.squared
})), unique(df$sid))
dplyr::summarise(dplyr::group_by(df[df$ds %in% "absolute", ], sid, ds, key),
"mean" = mean(val, na.rm = TRUE),
"median" = median(val, na.rm = TRUE),
"q75" = quantile(val, prob = 0.75, na.rm = TRUE))
# ggplot(df, aes(x = date, y =  val, color = key), alpha = 0.75) + geom_line(aes(group = key)) +
#   facet_wrap(ds~sid, scales = "free_y", ncol = length(unique(df$sid))) +
#   theme_light() + scale_x_date("Date", "6 months")
## CHECK CONVERSION FOR POINTS NOT THE RIGHT POINTS
ids <- obsloc$sid
figs <- lapply(ids, function(id) {
df_ <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", c("date", "key", "val")], key, val)
fig <- plot_ly(df_,
type = 'scatter', mode = 'lines',
x = ~date, y = ~sim_val, name = "Simulated")
fig <- add_trace(fig, x = ~date, y = df_$obs_val, type = 'scatter', mode = 'markers', name = "Observed")
fig <- layout(fig, yaxis = list(title = TeX("Avg.~Daily~Discharge~(m^{3}~sec^{-1})")),
xaxis = list(title = "Date"))
config(fig, mathjax = 'cdn')
})
multifig <- do.call("subplot", c(figs, list(nrows = length(figs))))
multifig <- layout(multifig,
annotations = lapply(seq_along(figs), function(i) {
list(x = 0.5,
y = 1 - (i - 1) * 1 / length(figs) - 0.03,
text =  sprintf("Station id: %s", ids[i]),
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE )
}))
multifig
# #fig
#
# ggplot(tidyr::spread(df[!df$ds %in% "difference", ], key, val), aes(x = date)) +
#   geom_line(aes(y = sim_val)) + geom_point(aes(y = obs_val), color = "red") +
#   facet_wrap(ds~sid, scales = "free_y", nrow = length(unique(df$sid)))# + ylim(0, 1)
#
# df$year <- format(df$date, "%Y")
# ggplot(tidyr::spread(df[!df$ds %in% "difference", ], key, val), aes(x = obs_val, y =  sim_val,
#                                                                     color = as.factor(year))) + geom_point(alpha = 0.25) +
#   geom_abline(intercept = 0, slope = 1) +
#   facet_grid(sid~year, scales = "free_y") +
#   theme_light() + xlim(NA, 50) + ylim(NA, 50)
#
#
# ## weekely
#
# df$week <- format(df$date, "%W-%Y")
# df2 <- as.data.frame(summarise(group_by(df, week, sid, ds, key),
#                               "val" = mean(val, na.rm = TRUE)))
#
# setNames(unlist(lapply(unique(df2$sid), function(id) {
#   tmp <- tidyr::spread(df2[df2$sid %in% id & df2$ds %in% "absolute", ], key, val)
#   KGE(s = tmp$sim_val, o = tmp$obs_val)
# })), unique(df$sid))
#
# ggplot(df2[!df2$key %in% "difference", ], aes(x = week, y =  val, color = key)) + geom_line(aes(group = key)) +
#   facet_wrap(ds~sid, scales = "free_y", ncol = 1) +
#   theme_light()
# # df$monYear <- format(as.Date(df$time, origin = "1901-01-01"), format = "%b-%Y")
# # kge <- setNames(unlist(lapply(unique(df2$sid), function(id) {
# #   tmp <- tidyr::spread(df2[df2$sid %in% id, ], key, val)
# #   KGE(sim = tmp$sim_val, obs = tmp$obs_val)
# # })), unique(df$sid))
# #
# #
# # df2 <- as.data.frame(dplyr::summarise(dplyr::group_by(df, monYear, sid, key), "val" = mean(val, na.rm = TRUE)))
# # ggplot(df2, aes(x = monYear, y =  val, color = key)) + geom_line(aes(group = key)) + facet_grid(sid~., scales = "free_y")
# #
# #
# # #dm <- mean(stack(cwatm4r::ncdf2raster(sprintf("%s/discharge_daily.nc", pth), flip = NULL, transpose = TRUE)))
# #writeRaster(dm, "discharge_Sorekmean.tif", overwrite = TRUE)
df[!format(as.Date(df$time, "1901-01-01"), format = "%m") %in% c("10", "11", "12", "01", "02", "03", "04"), "val"] <- NA
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
KGE(s = tmp$sim_val, o = tmp$obs_val)
#hydroGOF::KGE(sim = tmp$sim_val, obs = tmp$obs_val, method = "2009")
})), unique(df$sid))
df1 <- df
df[df$val < 30, ]
df <- df[df$val < 30, ]
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
KGE(s = tmp$sim_val, o = tmp$obs_val)
#hydroGOF::KGE(sim = tmp$sim_val, obs = tmp$obs_val, method = "2009")
})), unique(df$sid))
df <- df1
df <- df[df$val < 30, ]
df
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
KGE(s = tmp$sim_val, o = tmp$obs_val)
#hydroGOF::KGE(sim = tmp$sim_val, obs = tmp$obs_val, method = "2009")
})), unique(df$sid))
df <- df1
head(d)
head(df)
# Compare discharge
rm(list = ls())
gc()
require(plotly)
require(ggplot2)
require(raster)
#library(hydroGOF)
devtools::document("c:/users/fridman/documents/GitHub/cwatm4r")
devtools::load_all("c:/users/fridman/documents/GitHub/cwatm4r")
# check overflow form all wwt - e.g. Bet Shemesh; also check base flow and capillar location; also check with reduced aquifer size
KGE <- function(o,s) {
nans <- is.na(o)
o <- o[!nans]
s <- s[!nans]
B <- mean(s, na.rm = TRUE) / mean(o, na.rm = TRUE)
y <- (sd(s, na.rm = TRUE) / mean(s, na.rm = TRUE)) / (sd(o, na.rm = TRUE) / mean(o, na.rm = TRUE))
r <- cor(s, o, method = "pearson")
kge <- 1 -((r - 1) ^ 2 + (B - 1) ^ 2 + (y - 1) ^ 2)
return(kge)
}
NSE <- function(o,s, normalize = TRUE) {
nse <- 1 - sum((o - s) ^ 2, na.rm = TRUE) / sum((o - mean(o, na.rm = TRUE)) ^ 2, na.rm = TRUE)
if(normalize) {
nse <- 1 / (2 - nse)
}
return(nse)
}
#pth <-  "c:/Users/dof19/Dropbox/IIASA/cwatm_Israel/outputs/ayalonModflow_151221"
#pth <-  "c:/Users/dof19/Dropbox/IIASA/cwatm_Israel/outputs/SorekAyalonWadit/"
#pth <- "c:/Users/dof19/Dropbox/IIASA/cwatm_Israel/outputs/soreq_131221/"
#pth <- "c:/Users/dof19/Dropbox/IIASA/cwatm_Israel/outputs/modflow_checkStorage/"
pth <- "c:/Users/fridman/Dropbox/IIASA/cwatm_Israel/outputs/newModel_test/"
obs <- openxlsx::read.xlsx("c:/Users/fridman/Dropbox/IIASA/cwatm-dataCollection/Israel_1km/CWATM_data/cwatm_input30sec/calibration_data/daily_discharge_metaIncluded.xlsx",
sheet = 1, startRow = 2)
obsloc <- data.frame("x" = c(34.996, 34.754, 34.78, 34.845, 34.795, 34.862, #18115: 34.996
34.904, 34.917, 34.905),
"y" = c(31.755, 31.87, 31.837, 31.812, 32.037, 32.003, #18115: 31.755
31.962, 31.895, 31.987),
"sid" = c(18115, 18150, 18146, 18131, 17168, 17164,
17144, 17143, 17155))
#obsloc <- obsloc[obsloc$sid %in% c(18131, 18150, 18115), ] # sorek
obsloc <- obsloc[obsloc$sid %in% c(17168, 17164, 17144), ] # ayalon #
#obsloc <- obsloc[obsloc$sid %in% c(17168, 17164, 17144, 17155, 18131, 18150, 18115), ] # ayalonsorek
#period <- (c("2003-06-01", "2006-05-31"))
period <- NULL
# 18146 - can't get the discharge from the model due to spatial resolution.
# 18115 - may be off due to missed river pumping
x <- cwatm4r::ncdf2raster(pth = sprintf("%s/discharge_daily.nc", pth), transpose = TRUE,
spatial = obsloc, time = period, origin = "1901-01-01")
x$sid <- rep(obsloc$sid, nrow(x) /nrow(obsloc))
obs1 <- obs[obs$StationId %in% obsloc$sid, ]
x$date <- as.Date(as.numeric(x$time), origin = "1901-01-01")
obs1$time <- as.numeric(as.Date(paste0(obs1$Year, "-",obs1$Mon, "-", obs1$Day), "%Y-%m-%d") - as.Date("1901-01-01"))
obs1$pk <- paste(obs1$StationId, obs1$time, sep = "_")
x$pk <- paste(x$sid, x$time, sep = "_")
names(x)[5] <- "sim_val"
names(obs1)[5] <- "obs_val"
df <- merge(x, obs1[c(1, 5, 11)], all.x = TRUE, sort = FALSE, by = "pk")
df$difference <- df$sim_val - df$obs_val
df <- tidyr::gather(df, key, absolute, sim_val, obs_val)
df <- tidyr::gather(df, ds, val, absolute, difference)
df[df$ds %in% "difference", "key"] <- "difference"
## df wet season - 11 - 4 ###
df[!format(as.Date(df$time, "1901-01-01"), format = "%m") %in% c("10", "11", "12", "01", "02", "03", "04"), "val"] <- NA
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
KGE(s = tmp$sim_val, o = tmp$obs_val)
#hydroGOF::KGE(sim = tmp$sim_val, obs = tmp$obs_val, method = "2009")
})), unique(df$sid))
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
round(NSE(s = tmp$sim_val, o = tmp$obs_val), 3)
#hydroGOF::KGE(sim = tmp$sim_val, obs = tmp$obs_val, method = "2009")
})), unique(df$sid))
setNames(unlist(lapply(unique(df$sid), function(id) {
tmp <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", ], key, val)
summary(lm(sim_val~obs_val, data = tmp))$r.squared
})), unique(df$sid))
dplyr::summarise(dplyr::group_by(df[df$ds %in% "absolute", ], sid, ds, key),
"mean" = mean(val, na.rm = TRUE),
"median" = median(val, na.rm = TRUE),
"q75" = quantile(val, prob = 0.75, na.rm = TRUE))
# ggplot(df, aes(x = date, y =  val, color = key), alpha = 0.75) + geom_line(aes(group = key)) +
#   facet_wrap(ds~sid, scales = "free_y", ncol = length(unique(df$sid))) +
#   theme_light() + scale_x_date("Date", "6 months")
## CHECK CONVERSION FOR POINTS NOT THE RIGHT POINTS
ids <- obsloc$sid
figs <- lapply(ids, function(id) {
df_ <- tidyr::spread(df[df$sid %in% id & df$ds %in% "absolute", c("date", "key", "val")], key, val)
fig <- plot_ly(df_,
type = 'scatter', mode = 'lines',
x = ~date, y = ~sim_val, name = "Simulated")
fig <- add_trace(fig, x = ~date, y = df_$obs_val, type = 'scatter', mode = 'markers', name = "Observed")
fig <- layout(fig, yaxis = list(title = TeX("Avg.~Daily~Discharge~(m^{3}~sec^{-1})")),
xaxis = list(title = "Date"))
config(fig, mathjax = 'cdn')
})
multifig <- do.call("subplot", c(figs, list(nrows = length(figs))))
multifig <- layout(multifig,
annotations = lapply(seq_along(figs), function(i) {
list(x = 0.5,
y = 1 - (i - 1) * 1 / length(figs) - 0.03,
text =  sprintf("Station id: %s", ids[i]),
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE )
}))
multifig
# #fig
#
# ggplot(tidyr::spread(df[!df$ds %in% "difference", ], key, val), aes(x = date)) +
#   geom_line(aes(y = sim_val)) + geom_point(aes(y = obs_val), color = "red") +
#   facet_wrap(ds~sid, scales = "free_y", nrow = length(unique(df$sid)))# + ylim(0, 1)
#
# df$year <- format(df$date, "%Y")
# ggplot(tidyr::spread(df[!df$ds %in% "difference", ], key, val), aes(x = obs_val, y =  sim_val,
#                                                                     color = as.factor(year))) + geom_point(alpha = 0.25) +
#   geom_abline(intercept = 0, slope = 1) +
#   facet_grid(sid~year, scales = "free_y") +
#   theme_light() + xlim(NA, 50) + ylim(NA, 50)
#
#
# ## weekely
#
# df$week <- format(df$date, "%W-%Y")
# df2 <- as.data.frame(summarise(group_by(df, week, sid, ds, key),
#                               "val" = mean(val, na.rm = TRUE)))
#
# setNames(unlist(lapply(unique(df2$sid), function(id) {
#   tmp <- tidyr::spread(df2[df2$sid %in% id & df2$ds %in% "absolute", ], key, val)
#   KGE(s = tmp$sim_val, o = tmp$obs_val)
# })), unique(df$sid))
#
# ggplot(df2[!df2$key %in% "difference", ], aes(x = week, y =  val, color = key)) + geom_line(aes(group = key)) +
#   facet_wrap(ds~sid, scales = "free_y", ncol = 1) +
#   theme_light()
# # df$monYear <- format(as.Date(df$time, origin = "1901-01-01"), format = "%b-%Y")
# # kge <- setNames(unlist(lapply(unique(df2$sid), function(id) {
# #   tmp <- tidyr::spread(df2[df2$sid %in% id, ], key, val)
# #   KGE(sim = tmp$sim_val, obs = tmp$obs_val)
# # })), unique(df$sid))
# #
# #
# # df2 <- as.data.frame(dplyr::summarise(dplyr::group_by(df, monYear, sid, key), "val" = mean(val, na.rm = TRUE)))
# # ggplot(df2, aes(x = monYear, y =  val, color = key)) + geom_line(aes(group = key)) + facet_grid(sid~., scales = "free_y")
# #
# #
# # #dm <- mean(stack(cwatm4r::ncdf2raster(sprintf("%s/discharge_daily.nc", pth), flip = NULL, transpose = TRUE)))
# #writeRaster(dm, "discharge_Sorekmean.tif", overwrite = TRUE)
